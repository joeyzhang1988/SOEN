From b3665e4f88e8d81b81aff5cc48c6847c6fcc0eec Mon Sep 17 00:00:00 2001
From: Pavithra <pavithrak2006@gmail.com>
Date: Sat, 5 Apr 2014 16:28:07 -0400
Subject: [PATCH] Refactoring : God Class

The refactoring used is Extract Class.
Extract to new class setProperty.java,
Move unrelated methods setGuestName() and setPlayerIconPath() into the
new class.
Create an instance of the new class in original class Connection
Bridge.java. Update references to ConnectionBridge.java where these
methods are called.
---
 .../src/ChessGameKenai/Chat.java                   |  2 +-
 .../src/ChessGameKenai/Chess_Data.java             |  6 ++-
 .../src/ChessGameKenai/ConnectionBridge.java       | 14 ++++---
 .../src/ChessGameKenai/setProperty.java            | 47 ++++++++++++++++++++++
 4 files changed, 62 insertions(+), 7 deletions(-)
 create mode 100644 chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/setProperty.java

diff --git a/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/Chat.java b/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/Chat.java
index 8ab0fb7..ccb2909 100644
--- a/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/Chat.java
+++ b/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/Chat.java
@@ -310,7 +310,7 @@ public String getDescription() {
         int returnVal = saveDialog.showDialog(null, "save");
 
         // Check whether user canceled the save
-        if (returnVal != JFileChooser.APPROVE_OPTION) {
+      if (returnVal != JFileChooser.APPROVE_OPTION) {
             return;
         } else {
             File file = saveDialog.getSelectedFile();
diff --git a/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/Chess_Data.java b/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/Chess_Data.java
index 3502443..b92dc65 100644
--- a/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/Chess_Data.java
+++ b/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/Chess_Data.java
@@ -8,8 +8,10 @@
 
 import java.awt.Color;
 import java.io.*;
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
 import java.util.*;
-import java.util.ArrayList;
+
 import javax.swing.JOptionPane;
 
 /**
@@ -32,6 +34,8 @@
     private boolean isWhiteTurn = true;
     private boolean isServer = true;
     private boolean isGameOnLine = false;
+	public DateFormat format = new SimpleDateFormat("MM/dd/yy");
+	public Date dateNow = new Date();
 
     /**
      * Empty Constructor of the Chess_Data Class
diff --git a/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/ConnectionBridge.java b/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/ConnectionBridge.java
index d8c7b1c..22d09d5 100644
--- a/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/ConnectionBridge.java
+++ b/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/ConnectionBridge.java
@@ -180,11 +180,15 @@ public void analyzeAndExecute(Object object) {
                     chat.getTxtPane().insertIcon(new ImageIcon(getClass().getResource(((Packet) object).getImgPath())));
                     chat.getTxtPane().setCaretPosition(chat.getTxtPane().getDocument().getLength());
                 }
+                setProperty set=new setProperty();
+                set.setPlayerIconPath(object);
                 if (packet.getPlayerIconPath() != null) {
-                    ConnectionBridge.this.setPlayerIconPath(object);
+                    //ConnectionBridge.this.setPlayerIconPath(object);
+                	set.setPlayerIconPath(object);
                 }
                 if (packet.getGuestName() != null) {
-                    ConnectionBridge.this.setGuestName(object);
+                    //ConnectionBridge.this.setGuestName(object);
+                    set.setGuestName(object);
                 }
                 if (packet.getRestartGame() != null) {
                     ConnectionBridge.this.restartGame();
@@ -241,7 +245,7 @@ public void killThread() {
      * so he would also see that image changed
      * @param object as an Object
      */
-    public void setPlayerIconPath(Object object) {
+   /* public void setPlayerIconPath(Object object) {
         Packet packet = (Packet) object;
         if (data.isServer()) {
             data.getPlayers().get(1).setImagePath(packet.getPlayerIconPath());
@@ -258,7 +262,7 @@ public void setPlayerIconPath(Object object) {
      * so he would also see that name changed
      * @param object as an Object
      */
-    public void setGuestName(Object object) {
+    /*public void setGuestName(Object object) {
         Packet packet = (Packet) object;
         if (data.isServer()) {
             data.getPlayers().get(1).setName(packet.getGuestName());
@@ -266,5 +270,5 @@ public void setGuestName(Object object) {
             data.getPlayers().get(0).setName(packet.getGuestName());
         }
         data.notifyView();
-    }
+    }*/
 }
diff --git a/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/setProperty.java b/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/setProperty.java
new file mode 100644
index 0000000..8b53887
--- /dev/null
+++ b/chess/ChessGameV2.1(DIMITRI)/src/ChessGameKenai/setProperty.java
@@ -0,0 +1,47 @@
+package ChessGameKenai;
+import java.awt.Color;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.net.ConnectException;
+import java.net.InetAddress;
+import java.net.ServerSocket;
+import java.net.Socket;
+import java.net.SocketException;
+import java.util.ArrayList;
+import java.util.Observable;
+import java.util.Observer;
+import javax.swing.ImageIcon;
+import javax.swing.JOptionPane;
+import javax.swing.text.SimpleAttributeSet;
+
+public class setProperty {
+
+	private Chess_Data data;
+	public void setPlayerIconPath(Object object) {
+        Packet packet = (Packet) object;
+        if (data.isServer()) {
+            data.getPlayers().get(1).setImagePath(packet.getPlayerIconPath());
+        } else {
+            data.getPlayers().get(0).setImagePath(packet.getPlayerIconPath());
+        }
+        data.notifyView();
+    }
+
+    /**
+     * The method setGuestName simply sets the guest name
+     * of the player this method is used to update the view of the client
+     * when a client changes his name the name is send to the other client that is connected
+     * so he would also see that name changed
+     * @param object as an Object
+     */
+    public void setGuestName(Object object) {
+        Packet packet = (Packet) object;
+        if (data.isServer()) {
+            data.getPlayers().get(1).setName(packet.getGuestName());
+        } else {
+            data.getPlayers().get(0).setName(packet.getGuestName());
+        }
+        data.notifyView();
+    }
+}
-- 
1.9.1
